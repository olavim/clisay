say x = "outer x";

class Super {
    x = 100;
    msg = "initial";

    init(msg) {
        this.msg = msg;
    }

    fn getMsg() {
        return this.msg;
    }

    fn getSuperX() {
        // Return Super.x, not TestClass.x
        return this.x;
    }
}

class TestClass : Super {
    x; // hides Super.x
    y;

    init(x, y) {
        super("changed");
        this.x = x;
        this.y = y;
    }

    fn getSum() {
        // Member variables get precedence over outer scope variables
        return this.x + this.y + x + y;
    }

    fn getSumParams(x, y) {
        // Parameters get precedence over member variables
        return this.x + this.y + x + y;
    }

    fn getX() {
        return this.x;
    }
}

say obj = TestClass(10, 20);
print(obj.getX()); // expect: 10
print(obj.getSuperX()); // expect: 100

print(obj.x + obj.y); // expect: 30
print(obj.getSum()); // expect: 60
print(obj.getSumParams(0, 0)); // expect: 30

obj.x = 50;
print(obj.x); // expect: 50
print(obj.getSuperX()); // expect: 100

print(obj.getSumParams(0, 0)); // expect: 70
print(obj.getMsg()); // expect: changed